@model IEnumerable<Sic.Apollo.Models.Appointment.View.ProfessionalAppointment>
<div id="divcalendar">
    @{
        DateTime EvaluateDate = ViewBag.StartDate;
        DateTime Time = ViewBag.StartTime;
        IEnumerable<Sic.Apollo.Models.Appointment.View.DayOfWeek> DaysModel = ViewBag.DaysModel;
        DateTime start = ((DateTime)(ViewBag.StartDate)).Date;
        DateTime currentDateTime = Sic.Web.Mvc.Session.CurrentDateTime;
        ViewBag.CurrentDateTime = currentDateTime;
        IEnumerable<Sic.Apollo.Models.Pro.ProfessionalOfficeSchedule> schedules =
            (IEnumerable<Sic.Apollo.Models.Pro.ProfessionalOfficeSchedule>)ViewBag.Schedules;        
    }
    @using Sic.Apollo
    @while (Time <= ViewBag.EndTime)
    {
        EvaluateDate = ViewBag.StartDate;      
        
        if(schedules.Any(p=> Time >= p.StartTime && Time <= p.EndTime))
        {
          
        <div class="grid_hours">
            <div class="hour">@Time.ToString("t")</div>
            <div class="hours_content_table">
                @for (int i = 0; i < 7; i++)
                {
                    DateTime startDate = EvaluateDate.Date.AddHours(Time.Hour).AddMinutes(Time.Minute);
                    DateTime endDate = startDate.AddMinutes(ViewBag.Duration);
                    var apposAll = Model.Where(p => (p.StartDate >= startDate && p.StartDate < endDate) || (p.EndDate > startDate && p.EndDate <= endDate));
                    int side = startDate.Date < start.AddDays(3) ? 1 : 2;


                    var appos = apposAll.Where(p => (p.StartDate >= startDate && p.StartDate < endDate));

                    if (appos.Any())
                    {
                    <div class="hours">
                        @foreach (var appo in appos)
                        {                            
                            <div id="appointmentInfo@{@appo.AppointmentTransactionId}">
                                @{ Html.RenderPartial("AppointmentBookItem", appo); }
                            </div>                                                                                             
                        }
                        <div id="appointmentForNew@{@startDate.Ticks.ToString()}">
                        </div>
                    </div>
                    }
                    else if (startDate.Date >= currentDateTime.Date)
                    {                    
                    <div id="appointmentForNew@{@startDate.Ticks.ToString()}" isEmpty="true" class="hours_nones" onclick="javascript:openNewAppointmentDialog(@startDate.Ticks, @endDate.Ticks, '@(startDate.ToDefaultDateTimeFormat())',@side,false);">
                        <div class="inner">
                            <a>@Sic.Apollo.Resources.Resources.LabelForAdd</a>
                        </div>
                    </div>   
                    }
                    else
                    {
                    <div class="hours">
                    </div>
                    }

                    EvaluateDate = EvaluateDate.AddDays(1);

                }
            </div>
        </div>
        }
    
                Time = Time.AddMinutes(ViewBag.Duration);
    }
    <script type="text/javascript">  
    currentStartDate = @Html.Raw(ViewBag.StartDate.Ticks.ToString());
    @{
        int d = 1;
        foreach (Sic.Apollo.Models.Appointment.View.DayOfWeek day in DaysModel)
        {            
        <text> $(".dayName@{@d}").text('@Html.Raw(day.DayName)'); $(".date@{@d}").text('@Html.Raw(day.Date.ToDefaultDateFormat())');
        </text>
            d++;
        }
        <text> $(".prev_calendarLink").attr('href','javascript:loadCalendar(@ViewBag.ContactLocationId,@ViewBag.StartDate.AddDays(-7).Ticks,@ViewBag.Duration,@ViewBag.StartTime.Ticks,@ViewBag.EndTime.Ticks)')
        $(".next_calendarLink").attr('href','javascript:loadCalendar(@ViewBag.ContactLocationId,@ViewBag.StartDate.AddDays(7).Ticks,@ViewBag.Duration,@ViewBag.StartTime.Ticks,@ViewBag.EndTime.Ticks)')
        </text>
    }
    
@foreach (var item in Model.Where(p => p.StartDate < start.AddDays(3)))
{
        <text>
        setConfigurationTip(@item.AppointmentTransactionId,1);
        </text>
}

@foreach (var item in Model.Where(p => p.StartDate >= start.AddDays(3)))
{
        <text>
        setConfigurationTip(@item.AppointmentTransactionId,2);
        </text>
}
    </script>
</div>
