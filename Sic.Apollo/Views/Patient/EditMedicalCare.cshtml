@model Sic.Apollo.Models.Medical.MedicalCare
@{   
    DateTime currentDate = Sic.Web.Mvc.Session.CurrentDateTime.Date;
}
@using (Html.BeginForm("MedicalCare", "Patient", FormMethod.Post, new { id = "patientEvolutionForm" }))
{
    
    <div id="medicalCareDateLabel" class="txt_az_18 label_input_trigger label_date_trigger label_date_medical_care">
        @Model.EvolutionDate.ToDefaultDateFormat()
    </div>    
    <div class="top_save_button_medical_care">
        <center>
        <input onclick="updateMedicalHistory(@Model.MedicalCareId,false)" type="button" class="button_save_orange" value="@Sic.Apollo.Resources.Resources.LabelForSave" />
        <input onclick="updateMedicalHistory(@Model.MedicalCareId,true)" type="button" class="button_save_orange" value="@Sic.Apollo.Resources.Resources.LabelForSaveAndPrint" />
        <input onclick="cancelUpdateMedicalHistory()" type="button" class="button_save_orange" value="@Sic.Apollo.Resources.Resources.LabelForCancel" />
        </center>
    </div>
    <input type="text" id="medicalCareDateInput" style="display: none; clear:both;" />
    <br />
    <div class="box_text_med">@Sic.Apollo.Resources.Resources.LabelForMedicalCareEvolution</div>
    <div class="box_input_med">
        @Html.TextAreaFor(model => model.Evolution, new { @class = "area_text_big", id = "newEvolution" })
        <div>
            <span class="error_field">@Html.ValidationMessageFor(model => model.Evolution)</span>
        </div>
    </div>
    <div class="box_text_med">@Sic.Apollo.Resources.Resources.LabelForMedicalCareDiagnostic</div>
    <div class="box_input_med">
        @Html.TextAreaFor(model => model.Diagnostic, new { @class = "area_text_big", id = "newDiagnostic" })
        <div>
            <span class="error_field">@Html.ValidationMessageFor(model => model.Diagnostic)</span>
        </div>
    </div>
    <div class="box_text_med">@Sic.Apollo.Resources.Resources.LabelForMedicalCareTreatment</div>
    <div class="box_input_med">
        @Html.TextAreaFor(model => model.Treatment, new { @class = "area_text_big", id = "newTreatment" })
        <div>
            <span class="error_field">@Html.ValidationMessageFor(model => model.Treatment)</span>
        </div>
    </div>
    <div class="linebreak">
    </div>
@*<div class="line_med_sep"></div>*@
    <br />
    <div class="txt_az_18">
        @Sic.Apollo.Resources.Resources.LabelForMedication
    </div>
    <ul class="evolution_medicine_list">
        <li class="evolution_medicine_list_title">
            <div class="medicine">
                @Sic.Apollo.Resources.Resources.LabelForMedicine
            </div>
            <div class="posology">
                @Sic.Apollo.Resources.Resources.LabelForPosology
            </div>
            <div class="quantity">
                @Sic.Apollo.Resources.Resources.LabelForQuantity
            </div>
        </li>
        @{  int i = 1;
            int breaks = 1;
            foreach (var medication in Model.MedicalCareMedications.OrderBy(p => p.Priority))
            {
                if (i == 1 && breaks > 1)
                {
            <li id="showMoreMedication" class="itemmore"><span onclick="moreShowMedication()">@Sic.Apollo.Resources.Resources.LabelForMore</span>
            </li>
            @:@(new HtmlString("<div style=\"display:none\" id=\"medicationBreak" + breaks + "\">"))
                    }
            <li class="item" medicineitem="@{@medication.Priority}" medicineid="@medication.MedicalCareMedicationId">
                <textarea class="box_input_medicine vademecumSearch" name="medicineName">@medication.MedicationName</textarea>
                <textarea class="area_text_posology" name="posology">@medication.Posology</textarea>
                <input type="text" class="box_input_quantity" name="quantity" value="@(medication.Quantity > 0 ? medication.Quantity.ToJSNumericValue() : "")"/>
            </li>                    
                if (i == 5)
                {
                    i = 0;
                    if (breaks > 1)
                    {
            <li class="itemmore"><span onclick="lessShowMedication()">@Sic.Apollo.Resources.Resources.LabelForLess</span>
            </li>
            @:@(new HtmlString("</div>"))
                        }
                    breaks++;
                }
                i++;
            }
        }
    </ul>
    <div class="linebreak">
    </div>
    <div class="center_save_button">
        <center>
        <input onclick="updateMedicalHistory(@Model.MedicalCareId,false)" type="button" class="button_save_orange" value="@Sic.Apollo.Resources.Resources.LabelForSave" />
        <input onclick="updateMedicalHistory(@Model.MedicalCareId,true)" type="button" class="button_save_orange" value="@Sic.Apollo.Resources.Resources.LabelForSaveAndPrint" />
        <input onclick="cancelUpdateMedicalHistory()" type="button" class="button_save_orange" value="@Sic.Apollo.Resources.Resources.LabelForCancel" />
        </center>
    </div>
@*<div class="center_save_button">
        <center><input onclick="newMedicalHistory()" type="button" class="button_save_orange" value="@Sic.Apollo.Resources.Resources.LabelForSave" /></center>
    </div>   *@         
}
<script>
    $(function () {
        var evolutionDate = new Date(@Model.EvolutionDate.Year,@(Model.EvolutionDate.Month - 1),@Model.EvolutionDate.Day);
        var currentDate = new Date(@currentDate.Year,@(currentDate.Month - 1),@currentDate.Day);
        $("#medicalCareDateInput").datepicker({ dateFormat: SIC_DATE_DISPLAY_FORMAT, maxDate: currentDate,
            defaultDate: evolutionDate});
        
        $("#medicalCareDateInput").datepicker("setDate", evolutionDate)

        $("#medicalCareDateInput").change(function()
        {
            $("#medicalCareDateLabel").text($("#medicalCareDateInput").val());            
        });
        
        $("#medicalCareDateLabel").click(function()
        {
            $("#medicalCareDateInput").focus();
        });

        $(".vademecumSearch").autocomplete({ source: '@Url.Action("VademecumsAutocomplete", "Medical")',
            minLength: 3,
            open: function () {
                $(this).autocomplete('widget').css('z-index', 100000000);
                return false;
            },
            change: function (event, ui) {
                if ($(this).val() == '') {
                    $(this).parent('[medicineitem]').attr('pvid', '0');
                    $(this).parent('[medicineitem]').attr('gid', '0');
                }
            },
            search: function (event, ui) {
                if ($(this).val() != '') {
                    $(this).parent('[medicineitem]').attr('pvid', '0');
                    $(this).parent('[medicineitem]').attr('gid', '0');
                }
            },
            select: function (event, ui) {
                if (ui.item.label.substring(0, 1) == '*')
                    $(this).val(ui.item.label.substring(1));
                else
                    $(this).val(ui.item.label);

                var pos = $(this).parent('[medicineitem]').find("[name='posology']")
                var quantity = $(this).parent('[medicineitem]').find("[name='quantity']")
                $(pos).val(ui.item.pos);

                var pvid = ui.item.id;
                var gid = ui.item.gid;
                if (pvid === undefined)
                    pvid = '0';
                if (gid === undefined)
                    gid = '0';
                $(this).parent('[medicineitem]').attr('pvid', pvid);
                $(this).parent('[medicineitem]').attr('gid', gid);

                $(quantity).val(1);
                $(pos).focus();
                $(pos).select();
                return false;
            }
        });
    });
</script>
