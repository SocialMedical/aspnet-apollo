@model IEnumerable<Sic.Apollo.Models.Pro.View.Professional>
@using System.Threading;
@using System.Globalization;
@using System.Web.Script.Serialization
@{    
    Thread.CurrentThread.CurrentCulture = new CultureInfo("en-US");
}
@helper Encode(object obj){
    @(new HtmlString(new JavaScriptSerializer().Serialize(obj.ToString())));
}
<script language="javascript" type="text/javascript">
    $(document).ready(function () {

    var bounds = new google.maps.LatLngBounds();
    var options = {
        zoom : 14,
        scrollwheel: false,
        mapTypeId: google.maps.MapTypeId.ROADMAP        
    };
    var googleMap = new google.maps.Map($("#map")[0],options);
//    var infoWindow = new google.maps.InfoWindow(
//    {             
//        //maxWidth: 100,
//        //disableAutoPan: true,
//        pixelOffset: new google.maps.Size(120,100),
//    });    

    var infoWindow = new InfoBubble({          
          //content: '<div class="phoneytext">Some label</div>',                   
          shadowStyle: 1,
          padding: 0,
          //backgroundColor: 'rgb(57,57,57)',
          borderRadius: 4,
          arrowSize: 10,
          borderWidth: 1,
          borderColor: '#ccc',//'#2c2c2c',
          //disableAutoPan: true,
          //hideCloseButton: true,
          arrowPosition: 50,
          //maxWidth: 300,
          minWidth: 280, 
          minHeight: 140,            
          maxHeight: 170,
          //backgroundClassName: 'hiusa-bubble',//'phoney',
          //disableAnimation: true,
          arrowStyle: 0          
        });

    @foreach (var marker in Model)
    {
    <text>

         var point = new google.maps.LatLng(@marker.Latitude, @marker.Longitude);
        bounds.extend(point);        

        var size = new google.maps.Size(30, 42, "px", "px");
        var origin = new google.maps.Point(@{ @marker.MarkerStart }, 0);
        var image = new google.maps.MarkerImage("/Content/img/style/sprite_numbers_location.png", size, origin);
        
        var marker = new google.maps.Marker({
                position: point,
                map: googleMap,                
                title: '@marker.FullName',
                icon:  image, //'/App_Sprites/markers/number_@{ @marker.MarkerIndex }.png',
                draggable: false,                
                zIndex: @{ @marker.MarkerZIndex }                
            });       
           
            google.maps.event.addListener(marker, "mouseover", function () {                          
            infoWindow.setContent($('#cardBodyContent@{ @marker.ContactLocationId }').html());
            if(infoWindow.content.toString().length >0){
                infoWindow.open(googleMap, this);            
            }
            });

            google.maps.event.addListener(marker, "click", function () {
             //mapMarkerClick(@{ @marker.ProfessionalId }, @{ @marker.ContactLocationId }, @{ @marker.MarkerIndex })

                if(infoWindow.isOpen()){
                    infoWindow.close();
                }
                else {
                infoWindow.setContent($('#cardBodyContent@{ @marker.ContactLocationId }').html());
                if(infoWindow.content.toString().length >0){
                    infoWindow.open(googleMap, this);            
                    }
                }
             });

                                    
     @{ Thread.CurrentThread.CurrentCulture = new CultureInfo("en-US");  }     

    </text>
    }    
   
    @if (Model.Count() > 1)
    {
        <text>
            googleMap.fitBounds(bounds);
        </text>
    }
    else
    {
        if (Model.Count() == 1)
        {
            var marker = @Model.First();

            <text>
                googleMap.setCenter(new google.maps.LatLng(@marker.Latitude, @marker.Longitude));
            </text>
        }
        else
        {
            <text>
                googleMap.setCenter(new google.maps.LatLng(@Sic.Web.Mvc.Session.DefaultLatitude, @Sic.Web.Mvc.Session.DefaultLongitude));
            </text>
        }
    }    

    });
</script>
<div id="map">
</div>